.PHONY: help build up down restart logs clean deploy update health dev

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE = docker-compose.yml
COMPOSE_DEV = docker-compose.dev.yml

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "TimeOut Deploy - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º"
	@echo "===================================="
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# Production –∫–æ–º–∞–Ω–¥—ã
build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã
	docker compose -f $(COMPOSE_FILE) build

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	docker compose -f $(COMPOSE_FILE) up -d

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	docker compose -f $(COMPOSE_FILE) down

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	docker compose -f $(COMPOSE_FILE) restart

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
	docker compose -f $(COMPOSE_FILE) logs -f --tail=100

logs-panel: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø–∞–Ω–µ–ª–∏
	docker compose -f $(COMPOSE_FILE) logs -f --tail=100 panel

logs-bot: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞
	docker compose -f $(COMPOSE_FILE) logs -f --tail=100 bot

ps: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	docker compose -f $(COMPOSE_FILE) ps

# Development –∫–æ–º–∞–Ω–¥—ã
dev-build: ## –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	docker compose -f $(COMPOSE_DEV) build

dev-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	docker compose -f $(COMPOSE_DEV) up

dev-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	docker compose -f $(COMPOSE_DEV) down

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã
	docker compose -f $(COMPOSE_FILE) down -v
	docker system prune -f

deploy: ## –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ + —Å–±–æ—Ä–∫–∞ + –∑–∞–ø—É—Å–∫)
	@echo "üöÄ –î–µ–ø–ª–æ–π..."
	docker compose -f $(COMPOSE_FILE) down
	docker compose -f $(COMPOSE_FILE) build --no-cache
	docker compose -f $(COMPOSE_FILE) up -d
	@echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
	docker compose -f $(COMPOSE_FILE) ps

update: ## –û–±–Ω–æ–≤–∏—Ç—å submodules –∏ –ø–µ—Ä–µ–¥–µ–ø–ª–æ–∏—Ç—å
	@echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
	git pull origin main || git pull origin master
	git submodule update --remote --merge
	$(MAKE) deploy

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è..."
	@echo "Panel:"
	@docker inspect timeout-panel --format='{{.State.Health.Status}}' 2>/dev/null || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω"
	@echo "Bot:"
	@docker inspect timeout-bot --format='{{.State.Health.Status}}' 2>/dev/null || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω"
	@echo ""
	@docker compose -f $(COMPOSE_FILE) ps

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞
install: ## –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞..."
	@if [ ! -f .env ]; then \
		cp .env.example .env; \
		echo "‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏!"; \
	fi
	git submodule update --init --recursive
	@echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: make deploy"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test-config: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é docker-compose
	docker compose -f $(COMPOSE_FILE) config

test-build: ## –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞
	docker compose -f $(COMPOSE_FILE) build

# –£—Ç–∏–ª–∏—Ç—ã
shell-panel: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–∞–Ω–µ–ª–∏
	docker compose -f $(COMPOSE_FILE) exec panel sh

shell-bot: ## –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞
	docker compose -f $(COMPOSE_FILE) exec bot sh

stats: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
	docker stats --no-stream timeout-panel timeout-bot

backup-env: ## –ë—ç–∫–∞–ø .env —Ñ–∞–π–ª–∞
	@cp .env .env.backup.$(shell date +%Y%m%d_%H%M%S)
	@echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: .env.backup.$(shell date +%Y%m%d_%H%M%S)"

