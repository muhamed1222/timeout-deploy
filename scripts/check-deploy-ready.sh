#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é timeout-deploy"
echo "==============================================="
echo ""

READY=true

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞..."
if [ -f .env ]; then
    echo "  ‚úÖ .env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    REQUIRED_VARS=(
        "DATABASE_URL"
        "SUPABASE_URL"
        "SUPABASE_ANON_KEY"
        "SUPABASE_SERVICE_ROLE_KEY"
        "TELEGRAM_BOT_TOKEN"
        "TELEGRAM_BOT_USERNAME"
    )
    
    for var in "${REQUIRED_VARS[@]}"; do
        if grep -q "^$var=" .env; then
            echo "  ‚úÖ $var —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            echo "  ‚ùå $var –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            READY=false
        fi
    done
else
    echo "  ‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "     –°–æ–∑–¥–∞–π—Ç–µ: cp .env.example .env"
    READY=false
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ submodules
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ submodules..."
if [ -f "panel/package.json" ] && [ -f "bot/package.json" ]; then
    echo "  ‚úÖ Submodules –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
else
    echo "  ‚ùå Submodules –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
    echo "     –ó–∞–ø—É—Å—Ç–∏—Ç–µ: git submodule update --init --recursive"
    READY=false
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile..."
if [ -f "panel/Dockerfile" ]; then
    echo "  ‚úÖ panel/Dockerfile —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo "  ‚ùå panel/Dockerfile –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    READY=false
fi

if [ -f "bot/Dockerfile" ]; then
    echo "  ‚úÖ bot/Dockerfile —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo "  ‚ùå bot/Dockerfile –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    READY=false
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.yml
echo "üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.yml..."
if [ -f "docker-compose.yml" ]; then
    echo "  ‚úÖ docker-compose.yml —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo "  ‚ùå docker-compose.yml –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    READY=false
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
echo "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ Supabase..."
if grep -q "SUPABASE_URL" .env 2>/dev/null; then
    SUPABASE_URL=$(grep "^SUPABASE_URL=" .env | cut -d '=' -f2)
    HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$SUPABASE_URL" 2>/dev/null)
    if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "307" ] || [ "$HTTP_CODE" = "301" ]; then
        echo "  ‚úÖ Supabase –¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $HTTP_CODE)"
    else
        echo "  ‚ö†Ô∏è  Supabase –≤–µ—Ä–Ω—É–ª –∫–æ–¥: $HTTP_CODE"
    fi
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram —Ç–æ–∫–µ–Ω–∞
echo "ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞..."
if grep -q "TELEGRAM_BOT_TOKEN" .env 2>/dev/null; then
    BOT_TOKEN=$(grep "^TELEGRAM_BOT_TOKEN=" .env | cut -d '=' -f2)
    if [ ! -z "$BOT_TOKEN" ]; then
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://api.telegram.org/bot$BOT_TOKEN/getMe" 2>/dev/null)
        if [ "$HTTP_CODE" = "200" ]; then
            BOT_INFO=$(curl -s "https://api.telegram.org/bot$BOT_TOKEN/getMe" 2>/dev/null)
            BOT_USERNAME=$(echo $BOT_INFO | grep -o '"username":"[^"]*"' | cut -d'"' -f4)
            echo "  ‚úÖ Telegram —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω (@$BOT_USERNAME)"
        else
            echo "  ‚ùå Telegram —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω"
            READY=false
        fi
    fi
fi

echo ""
echo "================================================"
echo ""

if [ "$READY" = true ]; then
    echo "‚úÖ –í–°–Å –ì–û–¢–û–í–û –ö –î–ï–ü–õ–û–Æ!"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo ""
    echo "–õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç:"
    echo "  make deploy"
    echo ""
    echo "–î–µ–ø–ª–æ–π –Ω–∞ Render.com:"
    echo "  –û—Ç–∫—Ä–æ–π—Ç–µ DEPLOY_RENDER.md –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º"
    echo ""
    echo "–î–µ–ø–ª–æ–π –Ω–∞ VPS:"
    echo "  sudo ./scripts/setup-vps.sh"
    echo ""
else
    echo "‚ùå –ù–ï –ì–û–¢–û–í–û –ö –î–ï–ü–õ–û–Æ"
    echo ""
    echo "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞:"
    echo "  ./scripts/check-deploy-ready.sh"
    echo ""
fi

